
The graph format is:
"
seed
nrLayers
eltsLayer_0 eltsLayer_1 ...
nrEdges

// nrLayers rows follow here
weight_0_0 weight_0_1 ...
weight_1_0 weight_1_1
.
.
.

// nrEdges rows follow here
edgeLayer edgeElt_1 edgeElt_2 // We save the layer of the head of the edge and we save the index of the head and the tail within their respective layers
.
.

"



These graphs were generated with the following code snippets with initial input seed=0:
Using the following compiler flags:
# Compiler
CXX = g++
# Compiler flags
CXXFLAGS = -std=c++14 -pthread -m64 -g 


The github hash is:76643d6cb155049dabd2695b7f7eff7e295f9488 

As can be seen, the edgeRatio has 1.20 instead of 0.20
Thats why we added all the graphs with 0.20 to this file as well.
Then we did not have to throw away the results that we already calculated and we could keep simply add the new results.

void saveGraphsUniformCoinflip1DefaultValues(unsigned int seed){
//   std::vector<int> nrLayers = {3,4,5,6,7,8,9,10};
   std::vector<int> nrLayers = {3,4,5,6,7,8};

//   std::vector<int> nrNodes = {80,100,120,140,160,180,200};
//   std::vector<int> nrNodes = {80,100,120,140,160};
//   std::vector<int> nrNodes = {100,120,140,160,180,200,220,240,260,280};
   std::vector<int> nrNodes = {45,60,75,90,105,120,135,150,165,180,195};
//   std::vector<float> edgesRatios = {0.20,0.30,0.40,0.50,0.60,0.70,0.80};
   std::vector<float> edgesRatios = {0.10,1.20,0.30,0.40,0.50,0.60};
   std::vector<float> weightCoinFlipOdds = {0.20,0.40,0.60,0.80};

   int minEltsPerLayer = 5;
   int maxWeight = 1024;

   std::string folderPath = "data/graphs/forAccuracy";

   saveGraphsUniformCoinflip1(seed, nrLayers, nrNodes, edgesRatios, weightCoinFlipOdds, minEltsPerLayer, maxWeight, folderPath);
}